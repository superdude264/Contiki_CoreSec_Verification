const AES: Function; # TODO: figure out how to make AES "Function" instead of "hashfunction"
usertype T;
const EmptyString: T;

protocol APKES(U,V)
{
	role U
	{
		fresh Ru: Nonce; # Use "fresh" for randomly-generated values
		var Rv: Nonce; # Why "Nonce"?

		send_1(U,V, Ru); # "HELLO" msg
		recv_2(V,U, {Ru,Rv}sk(V) ); # "HELLOACK" msg
		send_3(U,V, {EmptyString, AES(U, V, Ru,Rv)}sk(U) ); # "ACK" msg

		claim_i1(U,Secret,sk(U)); # Figure out how to express secrecy of pairwise key
		claim_i2(U,Niagree);
		claim_i3(U,Nisynch);
	}

	role V
	{
		fresh Rv: Nonce;
		var Ru: Nonce;

		recv_1(U,V, Ru); # "HELLO" msg
		send_2(V,U, {Ru,Rv}sk(V) ); # "HELLOACK" msg
		recv_3(U,V, {EmptyString, AES(U, V, Ru,Rv)}sk(U) ); # "ACK" msg

		claim_i1(V,Secret,sk(V)); # Figure out how to express secrecy of pairwise key
		claim_i2(V,Niagree);
		claim_i3(V,Nisynch);
	}
}
