const AES: Function;
usertype T;
const Empty: T;

protocol APKES(U,V)
{
	role U
	{
		# Use "fresh" for randomly-generated values
		fresh Ru: Nonce; 
		var Rv: Nonce;

		# HELLO
		send_1(U,V, Ru); 

		# HELLOACK
		recv_2(V,U, {Ru,Rv}sk(V) ); 

		# ACK
		macro pairwiseKey = AES(sk(V), Ru, Rv);
		send_3(U,V, {Empty}sk(pairwiseKey) ); 

		# Claims
		claim_i1(U,Secret,sk(U));
		claim_i2(U, Secret, pairwiseKey);
		claim_i3(U,Niagree);
		claim_i4(U,Nisynch);
	}

	role V
	{
		var Ru: Nonce;
		fresh Rv: Nonce;
		
		# HELLO msg
		recv_1(U,V, Ru);

		# HELLOACK
		send_2(V,U, {Ru,Rv}sk(V) );

		# ACK
		macro pairwiseKey = AES(sk(V), Ru, Rv);
		recv_3(U,V, {Empty}sk(pairwiseKey) ); 

		# Claims
		claim_i1(V,Secret,sk(V));
		claim_i2(V, Secret, pairwiseKey);
		claim_i3(V,Niagree);
		claim_i4(V,Nisynch);
	}
}
